### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Edge {
  cursor: String
  node: User
}

type Friendship {
  friend: User
  room_id: Int
  user: User
}

type Header {
  from_id: User
  id: ID
  status: String
  to_id: User
}

type Message {
  content: String
  header_id: Header
  id: ID
  is_from_sender: Boolean
  read: Boolean
  time: String
}

type Mutation {
  createAuth0User(first_name: String!, last_name: String!, username: String!): User!
  createUser(first_name: String!, last_name: String!, password: String!, username: String!): User!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Query {
  friendshipsTable: [Friendship]
  friendshipsTable11: [User]
  headers: [Header]!
  messages: [Message]!
  user(id: Int, username: String): User
  users(after: String, first: Int): Response
}

type Response {
  edges: [Edge]
  pageInfo: PageInfo
}

type User {
  first_name: String
  id: ID
  last_name: String
  password: String
  username: ID
}